import React, { useEffect, useState } from "react";
import { useNavigate, useSearchParams } from "react-router-dom";
import { useQueryClient } from "@tanstack/react-query";
import { loginWithTelegram, fetchMe } from "../api/auth";
import styles from "./LoginPage.module.css";

export default function LoginPage() {
  const [error, setError] = useState(null);
  const [searchParams] = useSearchParams();
  const navigate = useNavigate();
  const qc = useQueryClient();

  useEffect(() => {
    // 1) –±–µ—Ä—ë–º initData –∏–∑ WebApp –∏–ª–∏ URL
    const raw =
      window.Telegram?.WebApp?.initData || searchParams.get("initData");

    console.log("üß™ [LoginPage] raw initData =", raw); // üëà DEBUG

    if (!raw) {
      setError("–ù–µ—Ç initData –æ—Ç Telegram");
      return;
    }

    // 2) –ª–æ–≥–∏–Ω–∏–º—Å—è –Ω–∞ backend
    loginWithTelegram(raw)
      .then(() => {
        console.log("‚úÖ [LoginPage] Login successful"); // üëà DEBUG

        // 3) —Ç–∞—â–∏–º –ø—Ä–æ—Ñ–∏–ª—å —é–∑–µ—Ä–∞
        return qc.fetchQuery(["me"], fetchMe);
      })
      .then((me) => {
        if (!me) throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å");
        console.log("üë§ [LoginPage] User profile:", me); // üëà DEBUG

        navigate("/", { replace: true });
      })
      .catch((e) => {
        console.error("‚ùå [LoginPage] –û—à–∏–±–∫–∞ –ª–æ–≥–∏–Ω–∞:", e); // üëà DEBUG
        setError(e.response?.data?.message || e.message);
      });
  }, [qc, navigate, searchParams]);

  return (
    <div className={styles.page}>
      {error ? (
        <div className={styles.error}>–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: {error}</div>
      ) : (
        <div className={styles.loading}>–í—Ö–æ–¥–∏–º —á–µ—Ä–µ–∑ Telegram‚Ä¶</div>
      )}
    </div>
  );
}

import React, { useEffect, useState } from "react";
import { useNavigate, useSearchParams } from "react-router-dom";
import { useQueryClient } from "@tanstack/react-query";
import { loginWithTelegram } from "../api/auth";
import styles from "./LoginPage.module.css";

const log = (...args) => console.log("[LoginPage]", ...args);
const logError = (...args) => console.error("[LoginPage]", ...args);

export default function LoginPage() {
  const [error, setError] = useState(null);
  const [searchParams] = useSearchParams();
  const navigate = useNavigate();
  const qc = useQueryClient();

  useEffect(() => {
    log("üöÄ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω, –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è useEffect –¥–ª—è –≤—Ö–æ–¥–∞.");

    qc.clear();
    log("‚úÖ –ö—ç—à React Query –æ—á–∏—â–µ–Ω.");

    console.group("üß™ [LoginPage] –ü—Ä–æ—Ü–µ—Å—Å –≤—Ö–æ–¥–∞ –∑–∞–ø—É—â–µ–Ω");

    let rawInit;
    if (window.Telegram?.WebApp?.initData) {
      rawInit = window.Telegram.WebApp.initData;
    } else {
      rawInit = searchParams.get("initData");
    }

    if (!rawInit) {
      setError("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤—Ö–æ–¥–∞ –æ—Ç Telegram (initData).");
      console.groupEnd();
      return;
    }

    log("–®–∞–≥ 1: –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã initData.");
    log("–®–∞–≥ 2: –í—ã–∑–æ–≤ `loginWithTelegram`...");

    loginWithTelegram(rawInit)
      .then((user) => {
        // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Ç–µ–ø–µ—Ä—å –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è user –¥–ª—è —è—Å–Ω–æ—Å—Ç–∏
        log("–®–∞–≥ 3: –ü–æ–ª—É—á–µ–Ω –æ–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç auth.js.");
        console.log("  ‚úÖ –û–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", user);

        // --- –≠–¢–û –ö–õ–Æ–ß–ï–í–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï ---
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ 'user' —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –æ–±—ä–µ–∫—Ç –∏ —É –Ω–µ–≥–æ –µ—Å—Ç—å id
        if (!user || typeof user !== "object" || !user.id) {
          logError(
            "  ‚ùå –û–®–ò–ë–ö–ê: –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ —è–≤–ª—è—é—Ç—Å—è –≤–∞–ª–∏–¥–Ω—ã–º –æ–±—ä–µ–∫—Ç–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.",
          );
          throw new Error("–û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.");
        }

        log("  üìã –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", user);

        log("–®–∞–≥ 4: –ü–æ–º–µ—â–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫—ç—à React Query...");
        qc.setQueryData(["me"], user);
        log("  ‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É—Å–ø–µ—à–Ω–æ –ø–æ–º–µ—â–µ–Ω—ã –≤ –∫—ç—à.");

        log("–®–∞–≥ 5: –ù–∞–≤–∏–≥–∞—Ü–∏—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É '/'...");
        navigate("/", { replace: true });
      })
      .catch((e) => {
        logError("  ‚ùå [LoginPage] –û—à–∏–±–∫–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –≤—Ö–æ–¥–∞:", e);
        const msg =
          e.response?.data?.detail || e.response?.data?.message || e.message;
        setError(msg);
      })
      .finally(() => {
        log("üèÅ –ü—Ä–æ—Ü–µ—Å—Å –≤—Ö–æ–¥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω.");
        console.groupEnd();
      });
  }, [qc, navigate, searchParams]);

  return (
    <div className={styles.page}>
      {error ? (
        <div className={styles.error}>–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: {error}</div>
      ) : (
        <div className={styles.loading}>–í—Ö–æ–¥–∏–º —á–µ—Ä–µ–∑ Telegram‚Ä¶</div>
      )}
    </div>
  );
}

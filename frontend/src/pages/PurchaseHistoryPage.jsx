// frontend/src/pages/PurchaseHistoryPage.jsx
import { useEffect, useState } from "react";
import { useNavigate } from "react-router-dom";

// 1. –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ö—É–∫ useMe –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
import { useMe } from "../api/auth";
import { fetchPurchaseHistory } from "../api/orders";
import styles from "./PurchaseHistoryPage.module.css";

export default function PurchaseHistoryPage() {
  /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ state ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
  const [orders, setOrders] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState("");

  const nav = useNavigate();

  // 2. –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const { isSuccess: isUserLoaded, isLoading: isUserLoading } = useMe();

  /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ fetch once ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
  useEffect(() => {
    // 3. –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω
    if (isUserLoaded) {
      (async () => {
        try {
          setLoading(true); // –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∏—Å—Ç–æ—Ä–∏–∏
          const data = await fetchPurchaseHistory(); // GET /api/orders/my
          setOrders(data);
        } catch (e) {
          console.error(e);
          setError(e.message || "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é");
        } finally {
          setLoading(false); // –ó–∞–≤–µ—Ä—à–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∏—Å—Ç–æ—Ä–∏–∏
        }
      })();
    }
  }, [isUserLoaded]); // 4. –î–æ–±–∞–≤–ª—è–µ–º isUserLoaded –≤ –º–∞—Å—Å–∏–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π

  /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ UI-—Å–æ—Å—Ç–æ—è–Ω–∏—è ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
  // –ü–æ–∫–∞ –∏–¥—ë—Ç –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å
  if (isUserLoading)
    return <div className={styles.placeholder}>–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Å—Å–∏–∏‚Ä¶</div>;

  // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ–≤–µ—Ä–µ–Ω, –Ω–æ –∏—Å—Ç–æ—Ä–∏—è –µ—â—ë –≥—Ä—É–∑–∏—Ç—Å—è
  if (loading)
    return <div className={styles.placeholder}>–ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏‚Ä¶</div>;

  if (error) return <div className={styles.placeholder}>{error}</div>;
  if (!orders.length)
    return (
      <div className={styles.placeholder}>–ü–æ–∫–∞ –Ω–∏—á–µ–≥–æ –Ω–µ –∫—É–ø–ª–µ–Ω–æ&nbsp;üôÇ</div>
    );

  /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ helpers ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
  const openChat = (id) => nav(`/messages/${id}`);

  /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ render ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
  return (
    <div className={styles.container}>
      {orders.map((o) => {
        const {
          id,
          total,
          created_at,
          product: { title, image_url = "" } = {},
        } = o;

        const dateFmt = new Date(created_at).toLocaleString();

        return (
          <article key={id} className={styles.card}>
            <img
              src={image_url || "/img/placeholder.webp"}
              alt={title}
              className={styles.image}
              loading="lazy"
            />
            <div className={styles.content}>
              <h2 className={styles.title}>{title}</h2>
              <div className={styles.meta}>
                <span className={styles.date}>{dateFmt}</span>
                <span className={styles.sum}>{Number(total).toFixed(2)} ‚ÇΩ</span>
              </div>
              <button className={styles.chatBtn} onClick={() => openChat(id)}>
                –û—Ç–∫—Ä—ã—Ç—å —á–∞—Ç
              </button>
            </div>
          </article>
        );
      })}
    </div>
  );
}
